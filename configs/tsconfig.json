 /* Visit https://www.typescriptlang.org/tsconfig to read more about this file */
 {
    /* Top Level */
    "exclude": [
      "node_modules",
      "build",
      "coverage",
    ],
    "include": ["../src/server/index.ts"],
    "files": ["../typings/global.d.ts"],
    /* Watch Options | Ref:https://www.typescriptlang.org/tsconfig#watch-options */
    // "watchFile": "",
    // "watchDirectory": "",
    // "fallbackPolling": "",
    // "synchronousWatchDirectory": "",
    // "excludeDirectories": "",
    // "excludeFiles": "",
    /* Type Acquisition | Ref:https://www.typescriptlang.org/tsconfig#type-acquisition */
    "typeAcquisition": {
      "enable": false,
      "include": []
    },
    /* Compiler Options */
    "compilerOptions": {
      /* Project Options */
      "allowJs": true,                            /* Allow javascript files to be compiled. */
      "checkJs": false,                           /* Report errors in .js files. */
      "composite": false,                         /* Enable project compilation */
      "declaration": false,                       /* Generates corresponding '.d.ts' file. */
      "declarationMap": false,                    /* Generates a sourcemap for each corresponding '.d.ts' file. */
      // "declarationDir": "",
      "emitDeclarationOnly": false,
      "downlevelIteration": false,                /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
      "importHelpers": false,                     /* Import emit helpers from 'tslib'. */
      "incremental": true,                        /* Enable incremental compilation */
      "tsBuildInfoFile": "../.tsbuildinfo",       /* Specify file to store incremental compilation information */
      "isolatedModules": false,                   /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
      // "jsx": "",                               /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
      "lib": ["esnext"],                          /* Specify library files to be included in the compilation. */
      "module": "commonjs",                       /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
      "noEmit": false,                            /* Do not emit outputs. */
      "outDir": "../build",                       /* Redirect output structure to the directory. */
      // "outFile": "./",                         /* Concatenate and emit output to single file. */
      "plugins": [],
      "removeComments": true,                     /* Do not emit comments to output. */
      "rootDir": "../src",                        /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
      "sourceMap": false,                         /* Generates corresponding '.map' file. */
      "target": "ESNext",                         /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
  
      /* Strict Checks */
      "strict": true,                             /* Enable all strict type-checking options. */
      "noImplicitAny": true,                      /* Raise error on expressions and declarations with an implied 'any' type. */
      "strictNullChecks": true,                   /* Enable strict null checks. */
      "strictFunctionTypes": true,                /* Enable strict checking of function types. */
      "strictBindCallApply": true,                /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
      "strictPropertyInitialization": true,       /* Enable strict checking of property initialization in classes. */
      "noImplicitThis": true,                     /* Raise error on 'this' expressions with an implied 'any' type. */
      "alwaysStrict": true,                       /* Parse in strict mode and emit "use strict" for each source file. */
  
      /* Module Resolution */
      // "moduleResolution": "node",                 /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
      // "baseUrl": "./",                            /* Base directory to resolve non-absolute module names. */
      // "paths": {},                                /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
      // "rootDirs": ["src"],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
      // "typeRoots": [],                            /* List of folders to include type definitions from. */
      // "types": ["node", "jest", "express"],       /* Type declaration files to be included in compilation. */
      "allowSyntheticDefaultImports": true,       /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
      "esModuleInterop": true,                    /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
      "preserveSymlinks": false,                  /* Do not resolve the real path of symlinks. */
      "allowUmdGlobalAccess": false,              /* Allow accessing UMD globals from modules. */
  
      /* Source Map Options */
      "inlineSourceMap": false,                   /* Emit a single file with source maps instead of having a separate file. */
      // "sourceRoot": "",
      "inlineSources": false,                     /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */
      // "sourceRoot": "",                        /* Specify the location where debugger should locate TypeScript files instead of source locations. */
      // "mapRoot": "",                           /* Specify the location where debugger should locate map files instead of generated locations. */
  
      /* Linter Checks */
      "noUnusedLocals": false,                    /* Report errors on unused locals. */
      "noUnusedParameters": false,                /* Report errors on unused parameters. */
      "noImplicitReturns": false,                 /* Report error when not all code paths in function return a value. */
      "noFallthroughCasesInSwitch": false,        /* Report errors for fallthrough cases in switch statement. */
  
      /* Experimental */
      "experimentalDecorators": true,             /* Enables experimental support for ES7 decorators. */
      "emitDecoratorMetadata": true,              /* Enables experimental support for emitting type metadata for decorators. */
  
      /* Advanced */
      "allowUnreachableCode": false,
      "allowUnusedLabels": false,
      "assumeChangesOnlyAffectDirectDependencies": false,
      "charset": "utf8",
      "diagnostics": false,
      "disableReferencedProjectLoad": false,
      "disableSizeLimit": false,
      "disableSolutionSearching": false,
      "disableSourceOfProjectReferenceRedirect": false,
      "emitBOM": false,
      "explainFiles": false,
      "extendedDiagnostics": false,
      "forceConsistentCasingInFileNames": true,   /* Disallow inconsistently-cased references to the same file. */
      "generateCpuProfile": "profile.cpuprofile",
      // "importsNotUsedAsValues": false,
      // "jsxFactory": "React.createElement",
      // "jsxFragmentFactory": "Fragment",
      // "jsxImportSource": "react",
      "keyofStringsOnly": false,
      "listEmittedFiles": false,
      "listFiles": false,
      "maxNodeModuleJsDepth": 0,
      // "newLine": "LF",
      "noEmitHelpers": false,
      "noEmitOnError": false,
      "noErrorTruncation": false,
      "noImplicitUseStrict": false,
      "noLib": false,
      "noResolve": false,
      "noStrictGenericChecks": false,
      // "out": "",
      "preserveConstEnums": true,
      "reactNamespace": "",
      "resolveJsonModule": false, /* Include modules imported with '.json' extension */
      "skipDefaultLibCheck": false,
      "skipLibCheck": true, /* Skip type checking of declaration files. */
      "stripInternal": false,
      "suppressExcessPropertyErrors": false,
      "suppressImplicitAnyIndexErrors": false,
      "traceResolution": false,
      "useDefineForClassFields": false,
  
      /* CLI */
      "preserveWatchOutput": false,
      "pretty": true,
    }
  }
  